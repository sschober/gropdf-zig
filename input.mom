.DOCTYPE DEFAULT
.TITLE "gropdf.zig Test"
.AUTHOR "Sven Schober"
.PRINTSTYLE TYPESET
.PAPER A5
.PT_SIZE 11
.START
.HEADING 1 "Introduction and Motivation"
.PP
.DROPCAP T 2
his file contains only some paragraphs of text. Its purpose is to
showcase some of groff's features und highlight potential rendering
problems in my custom PDF backend, gropdf.zig.
.
.HEADING 2 "Current State"
.PP
.DROPCAP C 2
urrently, a lot of features are implemented: We clearly can typeset
characters, sentences and whole paragraphs. In addition, headings
are working, some glitches have been solved by me. Even Drop Caps
are working, and if you look closely, you will notice the page
number at the bottom.
.PP
The positioning in grout is an interessting topic, as it seems to be
absolute, at first glance. Meaning, there are H and V absolute
coordinates given through all of the document. 
.PP
But, when ligatures are to be rendered, C commands are issued and
these do not increment the internal drawing position of the backend
device. The same is true for wh commands, which increment the x
drawing position in a relative way. But in order to be able to
compute the new absolute position, we need to know the current
position.
.PP
PDF on the other hand has a text rendering command Tj, which
increases the drawing position automatically, but we have no way to
query the current position as that is an internal state of the
renderer, which lives in the viewer.
.PP
There was no way around implementing relative positioning in
gropdf.zig. That meant, we need to read the font description files
residing in /usr/share/groff/current/font/devpdf/<font name>
